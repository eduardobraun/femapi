image: docker:latest

services:
  - docker:dind

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

test:cargo:
  image: "rustlang/rust:nightly"
  script:
    - apt-get update -yqq
    - apt-get install -yqq --no-install-recommends build-essential
    - apt-get -y install ca-certificates libssl-dev
    - rustc --version && cargo --version
    - cargo test --all --verbose

build-master:
  variables:
    GIT_SUBMODULE_STRATEGY: recursive


  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

deploy_staging:
  image: ubuntu:latest
  stage: deploy
  script:
    - ( apt-get update -y && apt-get install make ca-certificates openssl python wget openssh-client -y )
    - update-ca-certificates

    - eval $(ssh-agent -s)
    - echo "$STAGING_SERVICE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $STAGING_USER @ $STAGING_ADDR docker pull "$CI_REGISTRY_IMAGE"
  environment:
    name: staging
    url: https://staging.example.com
  only:
  - master
