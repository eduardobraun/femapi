image: "rustlang/rust:nightly"

cache:
  paths:
    - target
    - sharefem.db

stages:
  - test
  - build
  - publish
  - deploy

test:cargo:
  stage: test
  script:
    - apt-get update -yqq
    - apt-get install -yqq --no-install-recommends build-essential
    - apt-get -y install ca-certificates libssl-dev
    - rustc --version && cargo --version
    - cargo test --all --release

build-master:
  stage: build
  script:
    - apt-get update -yqq
    - apt-get install -yqq --no-install-recommends build-essential
    - apt-get -y install ca-certificates libssl-dev
    - cargo install diesel_cli
    - diesel setup
    - cargo build --release
  only:
    - master

publish-master:
  image: docker
  stage: publish
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

deploy_staging:
  image: "debian:stretch"
  stage: deploy
  script:
    - ( apt-get update -y && apt-get install ca-certificates openssl openssh-client -y )
    - update-ca-certificates
    # Configure ssh access key
    - eval $(ssh-agent -s)
    - echo "$STAGING_SERVICE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Setup configuration and data
    - mkdir ~/femapi
    - mkdir ~/femapi/config
    - mkdir ~/femapi/data
    - export secret=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
    - touch ~/femapi/config/env
    - echo "DATABASE_URL = sharefem.db" >> ~/femapi/config/env
    - echo "STATIC_DIR = /www" >> ~/femapi/config/env
    - echo "SECRET = $secret" >> ~/femapi/config/env
    - cp ./Rocket.toml ~/femapi/config
    - cp ./diesel.toml ~/femapi/config
    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" rm -rf ~/femapi
    - scp -r -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ~/femapi "$STAGING_USER"@"$STAGING_ADDR":~

    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" docker pull "$CI_REGISTRY_IMAGE"
    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" docker stop femapi
    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" docker rm femapi
    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" docker run \
      --name femapi -d -p 80:4000 \
      -v /home/`$STAGING_USER`/www:/www \
      -v /home/`$STAGING_USER`/femapi/config/Rocket.toml:/Rocket.toml \
      -v /home/`$STAGING_USER`/femapi/config/diesel.toml:/diesel.toml \
      -v /home/`$STAGING_USER`/femapi/config/env:/.env \
      "$CI_REGISTRY_IMAGE"

  environment:
    name: staging
    url: https://staging.example.com
  only:
  - master
