image: "registry.gitlab.com/sharefem/femapi/cargo_diesel_builder:latest"

cache:
  paths:
    - target

stages:
  - build
  - publish
  - deploy

test:
  stage: build
  script:
    - rustc --version && cargo --version
    - cargo test --all --release

build-master:
  stage: build
  script:
    # - diesel setup
    - cargo build --release
  artifacts:
    paths:
    - ./target/release/femapi
    expire_in: 1 week
  only:
    - master

build-builder:
  image: docker
  stage: build
  cache: {}
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -f "./Dockerfile.builder" -t "registry.gitlab.com/sharefem/femapi/cargo_diesel_builder" .
    - docker push "registry.gitlab.com/sharefem/femapi/cargo_diesel_builder"
  when: manual

publish-master:
  image: docker
  stage: publish
  cache: {}
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

deploy_staging:
  image: "debian:stretch"
  stage: deploy
  cache: {}
  script:
    - ( apt-get update -y && apt-get install ca-certificates openssl openssh-client -y )
    - update-ca-certificates
    # Configure ssh access key
    - eval $(ssh-agent -s)
    - echo "$STAGING_SERVICE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Setup configuration and data
    - mkdir ~/femapi
    - mkdir ~/femapi/config
    - mkdir ~/femapi/data
    - mkdir ~/femapi/data/projects
    # - mkdir ~/femapi/data/templates
    - curl --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/9379754/jobs/artifacts/master/download?job=build:master"
    - unzip artifacts.zip
    - mv ./templates ~/femapi/data
    - export secret=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
    - touch ~/femapi/config/env
    - echo "DATABASE_URL=postgres://""$STAGING_PG_USER"":""$STAGING_PG_PASS""@""$STAGING_PG_HOST""/""$STAGING_PG_DB" >> ~/femapi/config/env
    - echo "STATIC_DIR=/www" >> ~/femapi/config/env
    - echo "PROJECTS_DIR=/projects" >> ~/femapi/config/env
    - echo "TEMPLATES_DIR=/templates" >> ~/femapi/config/env
    - echo "SECRET=$secret" >> ~/femapi/config/env
    - cp ./Rocket.toml ~/femapi/config
    - cp ./diesel.toml ~/femapi/config

    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" sudo rm -rf /home/$STAGING_USER/femapi
    - scp -r -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ~/femapi "$STAGING_USER"@"$STAGING_ADDR":~

    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" docker pull "$CI_REGISTRY_IMAGE"
    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" docker stop femapi
    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" docker run \
      --name femapi --rm -d -p 80:4000 \
      -v /home/$STAGING_USER/femapi/config/env:/.env \
      -v /home/$STAGING_USER/www:/www \
      -v /home/$STAGING_USER/femapi/data/projects:/projects \
      -v /home/$STAGING_USER/femapi/data/templates:/templates \
      -v /home/$STAGING_USER/femapi/config/Rocket.toml:/Rocket.toml \
      -v /home/$STAGING_USER/femapi/config/diesel.toml:/diesel.toml \
      --link "$STAGING_PG_HOST":"STAGING_PG_HOST" \
      "$CI_REGISTRY_IMAGE"
  environment:
    name: staging
    url: http://$STAGING_ADDR
  only:
  - master
